---
source: libs/wingc/src/jsify/tests.rs
---
## Code

```w

    let var i = 10;
    () => {
      i = 12;
    };
    
```

## platform_manager.js

```js
const $stdlib = require('@winglang/sdk');
const $platforms = ((s) => !s ? [] : s.split(';'))(process.env.WING_PLATFORMS);
const $PlatformManager = new $stdlib.platform.PlatformManager({platformPaths: $platforms});
module.exports = $PlatformManager;
```

## preflight.js

```js
"use strict";
const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WING_SYNTH_DIR ?? ".";
const $wing_is_test = process.env.WING_IS_TEST === "true";
const std = $stdlib.std;
const $helpers = $stdlib.helpers;
const $PlatformManager = require('./platform_manager.js');
class $Root extends $stdlib.std.Resource {
  constructor($scope, $id) {
    super($scope, $id);
    let i = 10;
    (() => {
      i = 12;
    });
  }
}
const $APP = $PlatformManager.createApp({ outdir: $outdir, name: "main", rootConstruct: $Root, isTestEnvironment: $wing_is_test, entrypointDir: process.env['WING_SOURCE_DIR'], rootId: process.env['WING_ROOT_ID'] });
$APP.synth();
//# sourceMappingURL=preflight.js.map
```

