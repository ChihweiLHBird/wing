{
  "duration": 11803,
  "platforms": [
    "sim"
  ],
  "results": {
    "basic.test.w": {
      "inflight file basic operations": {
        "path": "root/env0/test:inflight file basic operations",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env0/test:inflight file basic operations/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:47.488Z"
          }
        ]
      }
    },
    "yaml.test.w": {
      "inflight yaml operations": {
        "path": "root/env0/test:inflight yaml operations",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env0/test:inflight yaml operations/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.578Z"
          }
        ]
      }
    },
    "temp_dir.test.w": {
      "inflight create temporary directory": {
        "path": "root/env0/test:inflight create temporary directory",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env0/test:inflight create temporary directory/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.597Z"
          }
        ]
      }
    },
    "json.test.w": {
      "inflight json operations": {
        "path": "root/env0/test:inflight json operations",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env0/test:inflight json operations/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.616Z"
          }
        ]
      }
    },
    "path.test.w": {
      "inflight path conversion": {
        "path": "root/env0/test:inflight path conversion",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env0/test:inflight path conversion/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.674Z"
          }
        ]
      },
      "extension()": {
        "path": "root/env1/test:extension()",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env1/test:extension()/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.765Z"
          }
        ]
      }
    },
    "stat.test.w": {
      "metadata()": {
        "path": "root/env0/test:metadata()",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env0/test:metadata()/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.655Z"
          }
        ]
      },
      "symlinkMetadata()": {
        "path": "root/env1/test:symlinkMetadata()",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env1/test:symlinkMetadata()/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.746Z"
          }
        ]
      },
      "setPermissions()": {
        "path": "root/env2/test:setPermissions()",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env2/test:setPermissions()/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.844Z"
          }
        ]
      }
    },
    "directory.test.w": {
      "inflight create normal directory": {
        "path": "root/env0/test:inflight create normal directory",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env0/test:inflight create normal directory/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.722Z"
          }
        ]
      },
      "cannot overwrite directory with a file": {
        "path": "root/env1/test:cannot overwrite directory with a file",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env1/test:cannot overwrite directory with a file/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.814Z"
          }
        ]
      },
      "isDir()": {
        "path": "root/env2/test:isDir()",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env2/test:isDir()/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.892Z"
          }
        ]
      }
    },
    "options.test.w": {
      "write and read file with `encoding` option": {
        "path": "root/env0/test:write and read file with `encoding` option",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env0/test:write and read file with `encoding` option/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.703Z"
          }
        ]
      },
      "write file with `flag` option": {
        "path": "root/env1/test:write file with `flag` option",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env1/test:write file with `flag` option/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.795Z"
          }
        ]
      },
      "removing non-existent file with `force: false` raises error": {
        "path": "root/env2/test:removing non-existent file with `force: false` raises error",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env2/test:removing non-existent file with `force: false` raises error/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.872Z"
          }
        ]
      },
      "removing directory with `recursive: false` raises error": {
        "path": "root/env3/test:removing directory with `recursive: false` raises error",
        "pass": true,
        "traces": [
          {
            "data": {
              "message": "Invoke (payload=\"\").",
              "status": "success"
            },
            "type": "resource",
            "sourcePath": "root/env3/test:removing directory with `recursive: false` raises error/Handler",
            "sourceType": "@winglang/sdk.cloud.Function",
            "timestamp": "2024-01-24T14:59:48.918Z"
          }
        ]
      }
    }
  }
}